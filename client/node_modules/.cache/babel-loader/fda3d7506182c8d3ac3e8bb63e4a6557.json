{"ast":null,"code":"import _slicedToArray from \"/Users/moshedeitsch/Desktop/stuff/react/react-mikud/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/moshedeitsch/Desktop/stuff/react/react-mikud/src/context/FormContext.js\";\nimport React, { useEffect, useState } from 'react';\nexport const FormContext = React.createContext();\n\nconst DarkModeProvider = props => {\n  const _React$useState = React.useState({\n    city: '',\n    street: '',\n    homeNumber: null,\n    entrance: ''\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        form = _React$useState2[0],\n        setForm = _React$useState2[1];\n\n  const _React$useState3 = React.useState(''),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        result = _React$useState4[0],\n        setresult = _React$useState4[1];\n\n  useEffect(() => {\n    fetch(`localhost:3000/${form.city}/${form.street}/${form.homeNumber}/${form.entrance}`).then(res => res.data).catch(err => err.message);\n  }, [setForm]);\n  return React.createElement(FormContext.Provider, {\n    value: {\n      form,\n      setForm\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default DarkModeProvider;","map":{"version":3,"sources":["/Users/moshedeitsch/Desktop/stuff/react/react-mikud/src/context/FormContext.js"],"names":["React","useEffect","useState","FormContext","createContext","DarkModeProvider","props","city","street","homeNumber","entrance","form","setForm","result","setresult","fetch","then","res","data","catch","err","message","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AAEA,OAAO,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;;AAGP,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA,0BACRN,KAAK,CAACE,QAAN,CACpB;AAACK,IAAAA,IAAI,EAAE,EAAP;AAAUC,IAAAA,MAAM,EAAC,EAAjB;AAAoBC,IAAAA,UAAU,EAAC,IAA/B;AAAoCC,IAAAA,QAAQ,EAAC;AAA7C,GADoB,CADQ;AAAA;AAAA,QACzBC,IADyB;AAAA,QACnBC,OADmB;;AAAA,2BAIJZ,KAAK,CAACE,QAAN,CAAe,EAAf,CAJI;AAAA;AAAA,QAIzBW,MAJyB;AAAA,QAIjBC,SAJiB;;AAM5Bb,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,KAAK,CAAE,kBAAiBJ,IAAI,CAACJ,IAAK,IAAGI,IAAI,CAACH,MAAO,IAAGG,IAAI,CAACF,UAAW,IAAGE,IAAI,CAACD,QAAS,EAAhF,CAAL,CACCM,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IADjB,EAECC,KAFD,CAEOC,GAAG,IAAIA,GAAG,CAACC,OAFlB;AAGH,GAJQ,EAIN,CAACT,OAAD,CAJM,CAAT;AAMH,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACD,MAAAA,IAAD;AAAMC,MAAAA;AAAN,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMN,KAAK,CAACgB,QADZ,CADJ;AAMH,CAlBF;;AAoBC,eAAejB,gBAAf","sourcesContent":["import React,{useEffect,useState} from 'react'\n\nexport const FormContext = React.createContext()\n\n\nconst DarkModeProvider = (props) => {\n    const [form, setForm] = React.useState(\n        {city: '',street:'',homeNumber:null,entrance:''}\n    )\n    const [result, setresult] = React.useState('')\n\n        useEffect(() => {\n            fetch(`localhost:3000/${form.city}/${form.street}/${form.homeNumber}/${form.entrance}`)\n            .then(res => res.data)\n            .catch(err => err.message)\n        }, [setForm])\n\n     return (\n         <FormContext.Provider value={{form,setForm}} >\n             { props.children }\n         </FormContext.Provider>\n     )\n \n }\n \n export default DarkModeProvider"]},"metadata":{},"sourceType":"module"}