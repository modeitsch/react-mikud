{"ast":null,"code":"import _slicedToArray from \"/Users/moshedeitsch/Desktop/stuff/react/react-mikud/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/moshedeitsch/Desktop/stuff/react/react-mikud/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\n\nconst App = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        darkMode = _useState2[0],\n        setDarkMode = _useState2[1];\n\n  useEffect(() => {\n    localStorage.setItem('dark', JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  const getInitialMode = () => {\n    JSON.parse(localStorage.getItem('dark'));\n  };\n\n  return React.createElement(\"div\", {\n    className: darkMode ? \" dark-mode\" : \"light-mode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"toggle-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setDarkMode(prevMode => !prevMode),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Toggle Mode\")), darkMode ? \"Dark MOde\" : \"Lighet Mode\");\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/moshedeitsch/Desktop/stuff/react/react-mikud/src/App.js"],"names":["React","useState","useEffect","App","darkMode","setDarkMode","localStorage","setItem","JSON","stringify","getInitialMode","parse","getItem","prevMode"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAO,aAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBAEgBF,QAAQ,CAAC,KAAD,CAFxB;AAAA;AAAA,QAETG,QAFS;AAAA,QAECC,WAFD;;AAKhBH,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAA7B;AACD,GAFQ,EAEP,CAACA,QAAD,CAFO,CAAT;;AAIA,QAAMM,cAAc,GAAE,MAAM;AAC1BF,IAAAA,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,MAArB,CAAX;AACD,GAFD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAER,QAAQ,GAAG,YAAH,GAAkB,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,MAAMC,WAAW,CAACQ,QAAQ,IAAI,CAACA,QAAd,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAFF,EAOOT,QAAQ,GAAG,WAAH,GAAiB,aAPhC,CADF;AAWD,CAzBD;;AA2BA,eAAeD,GAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport './index.css'\n\nconst App = () => {\n\n  const [darkMode, setDarkMode] = useState(false)\n  \n\n  useEffect(() => {\n    localStorage.setItem('dark', JSON.stringify(darkMode))\n  },[darkMode])\n\n  const getInitialMode =() => {\n    JSON.parse(localStorage.getItem('dark'))\n  }\n\n\n  return (\n    <div className={darkMode ? \" dark-mode\" : \"light-mode\"}>\n\n      <div className='toggle-container'>\n        <button onClick={() => setDarkMode(prevMode => !prevMode)} >Toggle Mode</button>\n      </div>\n\n\n          {darkMode ? \"Dark MOde\" : \"Lighet Mode\"}\n    </div >\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}