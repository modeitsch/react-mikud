{"ast":null,"code":"import _slicedToArray from \"/Users/moshedeitsch/Desktop/stuff/react/react-mikud/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/moshedeitsch/Desktop/stuff/react/react-mikud/src/components/Form.js\";\nimport React, { useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Result from './Result';\nimport { FormContext } from '../context/FormContext';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nconst Form = props => {\n  const context = useContext(FormContext);\n\n  const _React$useState = React.useState({}),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        address = _React$useState2[0],\n        setAddress = _React$useState2[1];\n\n  const handleChange = address => {\n    this.setAddress({\n      address\n    });\n  };\n\n  const handleSelect = address => {\n    geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => console.log('Success', latLng)).catch(error => console.error('Error', error));\n  };\n\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        errors = _useForm.errors;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form-style-7\",\n    onSubmit: handleSubmit(context.onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"\\u05E2\\u05D9\\u05E8\"), React.createElement(PlacesAutocomplete, {\n    type: \"text\",\n    name: \"city\",\n    maxLength: \"100\",\n    value: address,\n    onChange: handleChange,\n    onSelect: handleSelect,\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"autocomplete-dropdown-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, loading && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Loading...\"), suggestions.map(suggestion => {\n    const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n    const style = suggestion.active ? {\n      backgroundColor: '#fafafa',\n      cursor: 'pointer'\n    } : {\n      backgroundColor: '#ffffff',\n      cursor: 'pointer'\n    };\n    return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n      className,\n      style\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, suggestion.description));\n  })))), \"); } }\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"\\u05D4\\u05E7\\u05DC\\u05D3 \\u05D1\\u05D1\\u05E7\\u05E9\\u05D4 \\u05E9\\u05DD \\u05E2\\u05D9\\u05E8\"), errors.city && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"\\u05E2\\u05D9\\u05E8 \\u05D7\\u05D5\\u05D1\\u05D4\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"street\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"\\u05E8\\u05D7\\u05D5\\u05D1\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"street\",\n    maxLength: \"100\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"\\u05D4\\u05E7\\u05DC\\u05D3 \\u05D1\\u05D1\\u05E7\\u05E9\\u05D4 \\u05E9\\u05DD \\u05E8\\u05D7\\u05D5\\u05D1\"), errors.street && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\u05E8\\u05D7\\u05D5\\u05D1 \\u05D7\\u05D5\\u05D1\\u05D4\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"homeNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05D1\\u05D9\\u05EA\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"homeNumber\",\n    maxLength: \"100\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"\\u05D4\\u05E7\\u05DC\\u05D3 \\u05D1\\u05D1\\u05E7\\u05E9\\u05D4 \\u05DE\\u05E1\\u05E4\\u05E8 \\u05D1\\u05D9\\u05EA\"), errors.homeNumber && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05D1\\u05D9\\u05EA \\u05D7\\u05D5\\u05D1\\u05D4\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"entrance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \" \\u05DB\\u05E0\\u05D9\\u05E1\\u05D4\"), React.createElement(\"select\", {\n    name: \"entrance\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"\\u05D0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"\\u05D0\"), React.createElement(\"option\", {\n    value: \"\\u05D1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\u05D1\"), React.createElement(\"option\", {\n    value: \"\\u05D2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"\\u05D2\"), React.createElement(\"option\", {\n    value: \"\\u05D3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"\\u05D3\")), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"\\u05D4\\u05E7\\u05DC\\u05D3 \\u05D1\\u05D1\\u05E7\\u05E9\\u05D4 \\u05DE\\u05E1\\u05E4\\u05E8 \\u05DB\\u05E0\\u05D9\\u05E1\\u05D4\"), errors.entrance && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05DB\\u05E0\\u05D9\\u05E1\\u05D4 \\u05D7\\u05D5\\u05D1\\u05D4\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"\\u05D7\\u05E4\\u05E9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })))), context.mikud ? React.createElement(Result, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }) : null);\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/moshedeitsch/Desktop/stuff/react/react-mikud/src/components/Form.js"],"names":["React","useContext","useForm","Result","FormContext","PlacesAutocomplete","geocodeByAddress","getLatLng","Form","props","context","useState","address","setAddress","handleChange","handleSelect","then","results","latLng","console","log","catch","error","register","handleSubmit","errors","onSubmit","required","getInputProps","suggestions","getSuggestionItemProps","loading","map","suggestion","className","active","style","backgroundColor","cursor","description","city","street","homeNumber","entrance","mikud"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { useForm } from 'react-hook-form'\nimport Result from './Result'\nimport { FormContext } from '../context/FormContext'\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng, } from 'react-places-autocomplete';\n\nconst Form = (props) => {\n    const context = useContext(FormContext);\n\n    const [address, setAddress] = React.useState({})\n\n\n    const handleChange = address => {\n        this.setAddress({ address });\n    };\n\n    const handleSelect = address => {\n        geocodeByAddress(address)\n            .then(results => getLatLng(results[0]))\n            .then(latLng => console.log('Success', latLng))\n            .catch(error => console.error('Error', error));\n    };\n    const { register, handleSubmit, errors } = useForm()\n\n    return (\n        <div>\n            <form className=\"form-style-7\" onSubmit={handleSubmit(context.onSubmit)}>\n                <ul>\n                    <li>\n                        <label htmlFor=\"city\">עיר</label>\n        <PlacesAutocomplete type=\"text\" name=\"city\" maxLength=\"100\" value={address} onChange={handleChange} onSelect={handleSelect} ref={register({ required: true })}>\n   {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n     <div>\n\n       <div className=\"autocomplete-dropdown-container\">\n         {loading && <div>Loading...</div>}\n         {suggestions.map(suggestion => {\n           const className = suggestion.active\n             ? 'suggestion-item--active'\n             : 'suggestion-item';\n           // inline style for demonstration purpose\n           const style = suggestion.active\n             ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n             : { backgroundColor: '#ffffff', cursor: 'pointer' };\n           return (\n             <div\n               {...getSuggestionItemProps(suggestion, {\n                 className,\n                 style,\n               })}\n             >\n               <span>{suggestion.description}</span>\n             </div>\n           );\n         })}\n       </div>\n     </div>\n   )}\n </PlacesAutocomplete>\n);\n}\n}\n                        <span>הקלד בבקשה שם עיר</span>\n                        {errors.city && <span className='error-message'>עיר חובה</span>}\n                    </li>\n\n                        <li>\n                            <label htmlFor=\"street\">רחוב</label>\n                            <input type=\"text\" name=\"street\" maxLength=\"100\" ref={register({ required: true })} />\n                            <span>הקלד בבקשה שם רחוב</span>\n                            {errors.street && <span className='error-message'>רחוב חובה</span>}\n\n                        </li>\n                        <li>\n                            <label htmlFor=\"homeNumber\">מספר בית</label>\n                            <input type=\"number\" name=\"homeNumber\" maxLength=\"100\" ref={register({ required: true })} />\n                            <span>הקלד בבקשה מספר בית</span>\n                            {errors.homeNumber && <span className='error-message'>מספר בית חובה</span>}\n                        </li>\n                        <li>\n                            <label htmlFor=\"entrance\"> כניסה</label>\n                            <select name=\"entrance\" ref={register} >\n                                <option value=\"\"></option>\n                                <option value=\"א\">א</option>\n                                <option value=\"ב\">ב</option>\n                                <option value=\"ג\">ג</option>\n                                <option value=\"ד\">ד</option>\n                            </select>\n                            <span>הקלד בבקשה מספר כניסה</span>\n                            {errors.entrance && <span className='error-message'>מספר כניסה חובה</span>}\n\n                        </li>\n                        <li>\n                            <input type=\"submit\" value=\"חפש\" />\n                        </li>\n                </ul>\n            </form>\n\n                {context.mikud ? <Result /> : null}\n        </div>\n            );\n        }\n        \nexport default Form;"]},"metadata":{},"sourceType":"module"}