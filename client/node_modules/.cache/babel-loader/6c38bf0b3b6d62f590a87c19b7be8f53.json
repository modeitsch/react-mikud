{"ast":null,"code":"import _slicedToArray from \"/Users/moshedeitsch/Desktop/stuff/react/react-mikud/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/moshedeitsch/Desktop/stuff/react/react-mikud/src/context/FormContext.js\";\nimport React, { useEffect, useCallback } from 'react';\nexport const FormContext = React.createContext();\n\nconst FormProvider = props => {\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const handleClickOpen = useCallback(da => {\n    setState(data);\n  }, []);\n  useEffect(() => {\n    onSubmit();\n  }, [onSubmit]);\n  return React.createElement(FormContext.Provider, {\n    value: {\n      state,\n      onSubmit\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default FormProvider;","map":{"version":3,"sources":["/Users/moshedeitsch/Desktop/stuff/react/react-mikud/src/context/FormContext.js"],"names":["React","useEffect","useCallback","FormContext","createContext","FormProvider","props","useState","state","setState","handleClickOpen","da","data","onSubmit","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,WAAzB,QAA4C,OAA5C;AAEA,OAAO,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;;AAKP,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA,0BAEHN,KAAK,CAACO,QAAN,EAFG;AAAA;AAAA,QAErBC,KAFqB;AAAA,QAEfC,QAFe;;AAM5B,QAAMC,eAAe,GAAGR,WAAW,CAAES,EAAD,IAAQ;AACxCF,IAAAA,QAAQ,CAACG,IAAD,CAAR;AACD,GAFgC,EAE9B,EAF8B,CAAnC;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,QAAQ;AACT,GAFM,EAEJ,CAACA,QAAD,CAFI,CAAT;AAKC,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACL,MAAAA,KAAD;AAAOK,MAAAA;AAAP,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACQ,QADX,CADJ;AAMH,CAvBF;;AAyBC,eAAeT,YAAf","sourcesContent":["import React,{ useEffect,useCallback } from 'react'\n\nexport const FormContext = React.createContext()\n\n\n\n\nconst FormProvider = (props) => {\n\n    const [state,setState] = React.useState()\n\n\n\n    const handleClickOpen = useCallback((da) => {\n        setState(data)\n      }, [])\n\n\n\n    useEffect(() => {\n        onSubmit();\n      }, [onSubmit]);\n\n\n     return (\n         <FormContext.Provider value={{state,onSubmit}} >\n             {props.children}\n         </FormContext.Provider>\n     )\n \n }\n \n export default FormProvider\n"]},"metadata":{},"sourceType":"module"}