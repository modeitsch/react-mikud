{"ast":null,"code":"var _jsxFileName = \"/Users/moshedeitsch/Desktop/stuff/react/react-mikud/src/components/Navbar.js\";\nimport React, { useContext } from 'react';\nimport { DarkModeContext } from '../context/DarkModeContext';\nimport '../style/nav-bar.css';\n\nconst Navbar = props => {\n  const context = useContext(DarkModeContext);\n  return React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"first-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"toggle-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      color: context.darkMode ? \"grey\" : \"yellow\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"\\u2600\\uFE0E\"), React.createElement(\"span\", {\n    className: \"toggle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    checked: context.darkMode,\n    onChange: () => context.setDarkMode(prevMode => !prevMode),\n    id: \"checkbox\",\n    className: \"checkbox\",\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    style: {\n      color: context.darkMode ? \"slateblue\" : \"grey\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"\\u263E\"))), React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\u05DE\\u05D9\\u05E7\\u05D5\\u05D3 \\u05D9\\u05E9\\u05E8\\u05D0\\u05DC\"));\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/moshedeitsch/Desktop/stuff/react/react-mikud/src/components/Navbar.js"],"names":["React","useContext","DarkModeContext","Navbar","props","context","color","darkMode","setDarkMode","prevMode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAO,sBAAP;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAEtB,QAAMC,OAAO,GAAGJ,UAAU,CAACC,eAAD,CAA1B;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAED,OAAO,CAACE,QAAR,GAAmB,MAAnB,GAA4B;AAArC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,OAAO,EAAEF,OAAO,CAACE,QADrB;AAEI,IAAA,QAAQ,EAAE,MAAMF,OAAO,CAACG,WAAR,CAAoBC,QAAQ,IAAI,CAACA,QAAjC,CAFpB;AAGI,IAAA,EAAE,EAAC,UAHP;AAII,IAAA,SAAS,EAAC,UAJd;AAKI,IAAA,IAAI,EAAC,UALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAFJ,EAYI;AAAM,IAAA,KAAK,EAAE;AAAEH,MAAAA,KAAK,EAAED,OAAO,CAACE,QAAR,GAAmB,WAAnB,GAAiC;AAA1C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,CADA,CADJ,EAkBI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAlBJ,CADJ;AA6BH,CAjCD;;AAmCA,eAAeJ,MAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { DarkModeContext } from '../context/DarkModeContext'\nimport '../style/nav-bar.css'\n\nconst Navbar = (props) => {\n\n    const context = useContext(DarkModeContext);\n\n    return (\n        <nav>\n            <div className='first-item'>\n            <div className=\"toggle-container\">\n                <span style={{ color: context.darkMode ? \"grey\" : \"yellow\" }}>☀︎</span>\n                <span className=\"toggle\">\n                    <input\n                        checked={context.darkMode}\n                        onChange={() => context.setDarkMode(prevMode => !prevMode)}\n                        id=\"checkbox\"\n                        className=\"checkbox\"\n                        type=\"checkbox\"\n                    />\n                    <label htmlFor=\"checkbox\" />\n                </span>\n                <span style={{ color: context.darkMode ? \"slateblue\" : \"grey\" }}>☾</span>\n            </div>\n            </div>\n\n            <h1 className='title'>מיקוד ישראל</h1>\n\n        </nav>\n\n\n\n\n\n\n    );\n}\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}